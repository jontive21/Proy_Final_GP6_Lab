package Vistas;

import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Image;
import java.beans.PropertyVetoException;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import AppPackage.AnimationClass;
/**
 *
 * @author ariel
 */
public class ViewLogin extends javax.swing.JFrame {
        
    /**
     * Creates new form ViewPrincipal
     */
    public ViewLogin() {
        
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        escritorio = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        JlbRegistrarse = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jTextField1 = new javax.swing.JTextField();
        jPasswordField1 = new javax.swing.JPasswordField();
        jButton1 = new javax.swing.JButton();
        jPfondo = new FondoPanel();
        JTRegistroNombre = new javax.swing.JTextField();
        JlblNewCamarero = new javax.swing.JLabel();
        JlblRegistroNombre = new javax.swing.JLabel();
        JlblRegistroDni = new javax.swing.JLabel();
        JTRegistroDni = new javax.swing.JTextField();
        JbRegistro1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Prueba = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);

        escritorio.setBackground(new java.awt.Color(102, 51, 0));
        escritorio.setForeground(new java.awt.Color(102, 51, 0));

        jPanel1.setBackground(new java.awt.Color(51, 0, 0));
        jPanel1.setForeground(new java.awt.Color(102, 51, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(102, 0, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Georgia", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(219, 198, 83));
        jLabel3.setText("RESTAURANTE");
        jLabel3.setToolTipText("");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 30, 330, 51));

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/olla-calienteiCON.png"))); // NOI18N
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 20, 90, 70));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1320, 100));

        jSeparator1.setBackground(new java.awt.Color(255, 255, 255));
        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, 40, 580));

        JlbRegistrarse.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        JlbRegistrarse.setForeground(new java.awt.Color(219, 198, 83));
        JlbRegistrarse.setText("Registrarse en el sistema");
        JlbRegistrarse.setToolTipText("");
        JlbRegistrarse.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JlbRegistrarse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JlbRegistrarseMouseClicked(evt);
            }
        });
        jPanel1.add(JlbRegistrarse, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 590, 270, 40));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/camarero.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 90, 70));

        jLabel6.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(219, 198, 83));
        jLabel6.setText("Usuario:");
        jLabel6.setToolTipText("");
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 90, 40));

        jSeparator2.setBackground(new java.awt.Color(219, 198, 83));
        jSeparator2.setForeground(new java.awt.Color(219, 198, 83));
        jPanel1.add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 460, 280, 20));

        jSeparator3.setBackground(new java.awt.Color(219, 198, 83));
        jSeparator3.setForeground(new java.awt.Color(219, 198, 83));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 360, 280, 20));

        jTextField1.setBackground(new java.awt.Color(51, 0, 0));
        jTextField1.setForeground(new java.awt.Color(204, 204, 204));
        jTextField1.setBorder(null);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 324, 280, 40));

        jPasswordField1.setBackground(new java.awt.Color(51, 0, 0));
        jPasswordField1.setForeground(new java.awt.Color(204, 204, 204));
        jPasswordField1.setText("jPasswordField1");
        jPasswordField1.setBorder(null);
        jPanel1.add(jPasswordField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 432, 280, 30));

        jButton1.setBackground(new java.awt.Color(51, 0, 0));
        jButton1.setFont(new java.awt.Font("Dubai", 1, 24)); // NOI18N
        jButton1.setForeground(new java.awt.Color(219, 198, 83));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Offline.png"))); // NOI18N
        jButton1.setText("  Ingresar");
        jButton1.setBorder(null);
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Online.png"))); // NOI18N
        jButton1.setRolloverSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Online.png"))); // NOI18N
        jButton1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Online.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 490, 210, 70));

        jPfondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPfondo.add(JTRegistroNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 370, 40));

        JlblNewCamarero.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        JlblNewCamarero.setForeground(new java.awt.Color(219, 198, 83));
        JlblNewCamarero.setText("Nuevo Camarero:");
        JlblNewCamarero.setToolTipText("");
        JlblNewCamarero.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPfondo.add(JlblNewCamarero, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 300, 60));

        JlblRegistroNombre.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        JlblRegistroNombre.setForeground(new java.awt.Color(219, 198, 83));
        JlblRegistroNombre.setText("Nombre:");
        JlblRegistroNombre.setToolTipText("");
        JlblRegistroNombre.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPfondo.add(JlblRegistroNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 300, 60));

        JlblRegistroDni.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        JlblRegistroDni.setForeground(new java.awt.Color(219, 198, 83));
        JlblRegistroDni.setText("DNI:");
        JlblRegistroDni.setToolTipText("");
        JlblRegistroDni.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPfondo.add(JlblRegistroDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 300, 60));
        jPfondo.add(JTRegistroDni, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, 370, 40));

        JbRegistro1.setText("Registrarme!");
        jPfondo.add(JbRegistro1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, -1, -1));

        jPanel1.add(jPfondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, 910, 580));

        jLabel8.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(219, 198, 83));
        jLabel8.setText("Registro de camareros");
        jLabel8.setToolTipText("");
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 140, 300, 90));

        jLabel9.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(219, 198, 83));
        jLabel9.setText("Contraseña:");
        jLabel9.setToolTipText("");
        jLabel9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 380, 130, 40));

        Prueba.setText("Prueba");
        Prueba.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PruebaActionPerformed(evt);
            }
        });
        jPanel1.add(Prueba, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 510, -1, -1));

        escritorio.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout escritorioLayout = new javax.swing.GroupLayout(escritorio);
        escritorio.setLayout(escritorioLayout);
        escritorioLayout.setHorizontalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        escritorioLayout.setVerticalGroup(
            escritorioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void JlbRegistrarseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JlbRegistrarseMouseClicked
        JlbRegistrarse.setText("Registrarse en el sistema");
        Color amarillito = new Color(219, 198, 83);
        JlbRegistrarse.setForeground(amarillito);
        AnimationClass registro = new AnimationClass();
        registro.jLabelYUp(-150, 30, 10, 5,JlblNewCamarero );
        registro.jLabelYUp(-150, 200, 10, 5,JlblRegistroDni );
        registro.jLabelYUp(-150, 80, 10, 5,JlblRegistroNombre );
        registro.jButtonYUp(-150, 350, 10, 5, Prueba);
        registro.jTextFieldYUp(-150, 250, 10, 5, JTRegistroDni);
        registro.jTextFieldYUp(-150, 130, 10, 5, JTRegistroNombre);
    }//GEN-LAST:event_JlbRegistrarseMouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void PruebaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PruebaActionPerformed
        ViewMenuPrincipal vmp = new ViewMenuPrincipal();
        vmp.setVisible(true);
        vmp.setSize(1318,779);
        escritorio.add(vmp);
        vmp.moveToFront();
    }//GEN-LAST:event_PruebaActionPerformed

    
  
    private void agregarInternalFrame(JInternalFrame ifr) {
        escritorio.removeAll();
        escritorio.repaint();
        
        try {
            ifr.setMaximum(true);
        } catch (PropertyVetoException e) {
            e.printStackTrace();
        }
        
        ifr.setVisible(true);
        escritorio.add(ifr);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField JTRegistroDni;
    private javax.swing.JTextField JTRegistroNombre;
    private javax.swing.JButton JbRegistro1;
    private javax.swing.JLabel JlbRegistrarse;
    private javax.swing.JLabel JlblNewCamarero;
    private javax.swing.JLabel JlblRegistroDni;
    private javax.swing.JLabel JlblRegistroNombre;
    private javax.swing.JButton Prueba;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPanel jPfondo;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
class FondoPanel extends JPanel {
        private Image imagen;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import Entidades.Mesa;
import Persistencia.MesaData;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JDesktopPane;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/**
 *
 * @author Usuario
 */
public class ViewMenuPrincipal extends javax.swing.JInternalFrame {
    
    private Mesa[] mesas = new Mesa[12]; // Máximo 12 mesas
    private JLabel[] mesaLabels = new JLabel[12]; // Máximo 12 JLabels
    private JLabel selectedLabel = null;
    private MesaData md;
    private List <Mesa> mesasList = new ArrayList<>();
    private static int mesasAgregadas;
    /**
     * Creates new form ViewMenuPrincipal
     */
    public ViewMenuPrincipal() {
        md= new MesaData();
      mesasList=md.listarMesas();
      mesasAgregadas=mesasList.size();
        initComponents();
        inicializarMesas();
         traerMesasDB();
        actualizarComboBoxMesas();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        cantidadMesasComboBox = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        JtCapacidadMesas = new javax.swing.JTextField();
        btnProductos1 = new javax.swing.JButton();
        JbAceptarMesa = new javax.swing.JButton();
        jDialog2 = new javax.swing.JDialog();
        jPanel3 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        JtModificarCapMesas = new javax.swing.JTextField();
        JlblMesaSeleccionada = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        JCEstadoDeMesa = new javax.swing.JComboBox<>();
        JbAceptarModificarMesa = new javax.swing.JButton();
        JbCancelarModificarMesa = new javax.swing.JButton();
        escritorio = new javax.swing.JDesktopPane();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        JlblNumMesa = new javax.swing.JLabel();
        JlblMesa2 = new javax.swing.JLabel();
        JbAñadirMesa = new javax.swing.JButton();
        JbModificarMesa = new javax.swing.JButton();
        JbAEliminarMesa = new javax.swing.JButton();
        JlblMesa1 = new javax.swing.JLabel();
        JlblMesa3 = new javax.swing.JLabel();
        JlblMesa4 = new javax.swing.JLabel();
        JlblMesa5 = new javax.swing.JLabel();
        JlblMesa6 = new javax.swing.JLabel();
        JlblMesa7 = new javax.swing.JLabel();
        JlblMesa8 = new javax.swing.JLabel();
        JlblMesa9 = new javax.swing.JLabel();
        JlblMesa10 = new javax.swing.JLabel();
        JlblMesa11 = new javax.swing.JLabel();
        JlblMesa12 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        JlblCapMesa = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        JlblEstadoMesa = new javax.swing.JLabel();
        btnProductos = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnProductos2 = new javax.swing.JButton();

        jPanel2.setBackground(new java.awt.Color(51, 0, 0));
        jPanel2.setPreferredSize(new java.awt.Dimension(580, 420));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Georgia", 1, 16)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(246, 23, 36));
        jLabel6.setText("(Maximo de 12)");
        jLabel6.setToolTipText("");
        jLabel6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 110, 130, 30));

        cantidadMesasComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 Mesa", "2  Mesas", "3 Mesas", "4 Mesas", "5 Mesas", "6 Mesas", "7 Mesas", "8 Mesas", "9 Mesas", "10 Mesas", "11 Mesas", "12 Mesas" }));
        cantidadMesasComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cantidadMesasComboBoxActionPerformed(evt);
            }
        });
        jPanel2.add(cantidadMesasComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 90, 130, -1));

        jLabel7.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(219, 198, 83));
        jLabel7.setText("Capacidad de las mesas:");
        jLabel7.setToolTipText("");
        jLabel7.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 270, 40));

        jLabel10.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(219, 198, 83));
        jLabel10.setText("Cantidad de mesas a añadir:");
        jLabel10.setToolTipText("");
        jLabel10.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, 270, 40));
        jPanel2.add(JtCapacidadMesas, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 230, 120, 50));

        btnProductos1.setBackground(new java.awt.Color(102, 0, 0));
        btnProductos1.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        btnProductos1.setForeground(new java.awt.Color(255, 204, 153));
        btnProductos1.setText("Cancelar");
        btnProductos1.setToolTipText("");
        btnProductos1.setBorderPainted(false);
        btnProductos1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnProductos1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnProductos1.setIconTextGap(12);
        btnProductos1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductos1ActionPerformed(evt);
            }
        });
        jPanel2.add(btnProductos1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 330, 130, 50));

        JbAceptarMesa.setBackground(new java.awt.Color(102, 0, 0));
        JbAceptarMesa.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        JbAceptarMesa.setForeground(new java.awt.Color(255, 204, 153));
        JbAceptarMesa.setText("Aceptar");
        JbAceptarMesa.setToolTipText("");
        JbAceptarMesa.setBorderPainted(false);
        JbAceptarMesa.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JbAceptarMesa.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JbAceptarMesa.setIconTextGap(12);
        JbAceptarMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbAceptarMesaActionPerformed(evt);
            }
        });
        jPanel2.add(JbAceptarMesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 330, 120, 50));

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDialog1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(51, 0, 0));
        jPanel3.setPreferredSize(new java.awt.Dimension(580, 420));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(219, 198, 83));
        jLabel11.setText("Mesa seleccionada:");
        jLabel11.setToolTipText("");
        jLabel11.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 40, 190, 40));

        JtModificarCapMesas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtModificarCapMesasActionPerformed(evt);
            }
        });
        jPanel3.add(JtModificarCapMesas, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 120, 120, 50));

        JlblMesaSeleccionada.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        JlblMesaSeleccionada.setForeground(new java.awt.Color(219, 198, 83));
        JlblMesaSeleccionada.setText("1");
        JlblMesaSeleccionada.setToolTipText("");
        JlblMesaSeleccionada.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.add(JlblMesaSeleccionada, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, 30, 40));

        jLabel13.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(219, 198, 83));
        jLabel13.setText("Estado:");
        jLabel13.setToolTipText("");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 230, 80, 40));

        jLabel14.setFont(new java.awt.Font("Georgia", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(219, 198, 83));
        jLabel14.setText("Capacidad de la mesa:");
        jLabel14.setToolTipText("");
        jLabel14.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 230, 40));

        JCEstadoDeMesa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Libre", "Ocupada", "Atendida", "Reservada" }));
        JCEstadoDeMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JCEstadoDeMesaActionPerformed(evt);
            }
        });
        jPanel3.add(JCEstadoDeMesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 230, 160, 40));

        JbAceptarModificarMesa.setBackground(new java.awt.Color(102, 0, 0));
        JbAceptarModificarMesa.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        JbAceptarModificarMesa.setForeground(new java.awt.Color(255, 204, 153));
        JbAceptarModificarMesa.setText("Aceptar");
        JbAceptarModificarMesa.setToolTipText("");
        JbAceptarModificarMesa.setBorderPainted(false);
        JbAceptarModificarMesa.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JbAceptarModificarMesa.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JbAceptarModificarMesa.setIconTextGap(12);
        JbAceptarModificarMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbAceptarModificarMesaActionPerformed(evt);
            }
        });
        jPanel3.add(JbAceptarModificarMesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 330, 120, 50));

        JbCancelarModificarMesa.setBackground(new java.awt.Color(102, 0, 0));
        JbCancelarModificarMesa.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        JbCancelarModificarMesa.setForeground(new java.awt.Color(255, 204, 153));
        JbCancelarModificarMesa.setText("Cancelar");
        JbCancelarModificarMesa.setToolTipText("");
        JbCancelarModificarMesa.setBorderPainted(false);
        JbCancelarModificarMesa.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JbCancelarModificarMesa.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        JbCancelarModificarMesa.setIconTextGap(12);
        JbCancelarModificarMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbCancelarModificarMesaActionPerformed(evt);
            }
        });
        jPanel3.add(JbCancelarModificarMesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 330, 130, 50));

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setPreferredSize(new java.awt.Dimension(1320, 680));

        escritorio.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 0, 0));
        jPanel1.setForeground(new java.awt.Color(51, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        jSeparator1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 0, 30, 770));

        jLabel8.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(219, 198, 83));
        jLabel8.setText("Mesas:");
        jLabel8.setToolTipText("");
        jLabel8.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, 100, 50));

        JlblNumMesa.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        JlblNumMesa.setForeground(new java.awt.Color(219, 198, 83));
        JlblNumMesa.setText("No se ha seleccionado aun");
        JlblNumMesa.setToolTipText("");
        JlblNumMesa.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(JlblNumMesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 10, 150, 40));

        JlblMesa2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Vacio.png"))); // NOI18N
        JlblMesa2.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Atendida.png"))); // NOI18N
        jPanel1.add(JlblMesa2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 140, 200, 150));

        JbAñadirMesa.setBackground(new java.awt.Color(102, 0, 0));
        JbAñadirMesa.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        JbAñadirMesa.setForeground(new java.awt.Color(255, 204, 153));
        JbAñadirMesa.setText("Añadir");
        JbAñadirMesa.setToolTipText("");
        JbAñadirMesa.setBorderPainted(false);
        JbAñadirMesa.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JbAñadirMesa.setIconTextGap(12);
        JbAñadirMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbAñadirMesaActionPerformed(evt);
            }
        });
        jPanel1.add(JbAñadirMesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 80, -1, -1));

        JbModificarMesa.setBackground(new java.awt.Color(102, 0, 0));
        JbModificarMesa.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        JbModificarMesa.setForeground(new java.awt.Color(255, 204, 153));
        JbModificarMesa.setText("Modificar");
        JbModificarMesa.setToolTipText("");
        JbModificarMesa.setBorderPainted(false);
        JbModificarMesa.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JbModificarMesa.setIconTextGap(12);
        JbModificarMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbModificarMesaActionPerformed(evt);
            }
        });
        jPanel1.add(JbModificarMesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 80, -1, -1));

        JbAEliminarMesa.setBackground(new java.awt.Color(102, 0, 0));
        JbAEliminarMesa.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        JbAEliminarMesa.setForeground(new java.awt.Color(255, 204, 153));
        JbAEliminarMesa.setText("Borrar");
        JbAEliminarMesa.setToolTipText("");
        JbAEliminarMesa.setBorderPainted(false);
        JbAEliminarMesa.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        JbAEliminarMesa.setIconTextGap(12);
        JbAEliminarMesa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JbAEliminarMesaActionPerformed(evt);
            }
        });
        jPanel1.add(JbAEliminarMesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 80, -1, -1));

        JlblMesa1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Vacio.png"))); // NOI18N
        JlblMesa1.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Atendida.png"))); // NOI18N
        jPanel1.add(JlblMesa1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 140, 200, 150));

        JlblMesa3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Vacio.png"))); // NOI18N
        JlblMesa3.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Atendida.png"))); // NOI18N
        jPanel1.add(JlblMesa3, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 140, -1, 150));

        JlblMesa4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Vacio.png"))); // NOI18N
        JlblMesa4.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Atendida.png"))); // NOI18N
        jPanel1.add(JlblMesa4, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 140, 200, 150));

        JlblMesa5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Vacio.png"))); // NOI18N
        JlblMesa5.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Atendida.png"))); // NOI18N
        jPanel1.add(JlblMesa5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 310, 200, 150));

        JlblMesa6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Vacio.png"))); // NOI18N
        JlblMesa6.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Atendida.png"))); // NOI18N
        jPanel1.add(JlblMesa6, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 310, 200, 150));

        JlblMesa7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Vacio.png"))); // NOI18N
        JlblMesa7.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Atendida.png"))); // NOI18N
        jPanel1.add(JlblMesa7, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 310, -1, 150));

        JlblMesa8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Vacio.png"))); // NOI18N
        JlblMesa8.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Atendida.png"))); // NOI18N
        jPanel1.add(JlblMesa8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 300, 200, 150));

        JlblMesa9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Vacio.png"))); // NOI18N
        JlblMesa9.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Atendida.png"))); // NOI18N
        jPanel1.add(JlblMesa9, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 480, -1, 150));

        JlblMesa10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Vacio.png"))); // NOI18N
        JlblMesa10.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Atendida.png"))); // NOI18N
        jPanel1.add(JlblMesa10, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 480, 200, 150));

        JlblMesa11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Vacio.png"))); // NOI18N
        JlblMesa11.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Atendida.png"))); // NOI18N
        jPanel1.add(JlblMesa11, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 480, 200, 150));

        JlblMesa12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Vacio.png"))); // NOI18N
        JlblMesa12.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Atendida.png"))); // NOI18N
        jPanel1.add(JlblMesa12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1090, 480, 200, 150));

        jLabel12.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(219, 198, 83));
        jLabel12.setText("Menu principal");
        jLabel12.setToolTipText("");
        jLabel12.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 0, 300, 50));

        jLabel15.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(219, 198, 83));
        jLabel15.setText("Mesa: ");
        jLabel15.setToolTipText("");
        jLabel15.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 0, 80, 50));

        jLabel16.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(219, 198, 83));
        jLabel16.setText("Cap:");
        jLabel16.setToolTipText("");
        jLabel16.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 30, 80, 50));

        JlblCapMesa.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        JlblCapMesa.setForeground(new java.awt.Color(219, 198, 83));
        JlblCapMesa.setText("No se ha seleccionado aun");
        JlblCapMesa.setToolTipText("");
        JlblCapMesa.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(JlblCapMesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 40, 150, 40));

        jLabel18.setFont(new java.awt.Font("Georgia", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(219, 198, 83));
        jLabel18.setText("Estd:");
        jLabel18.setToolTipText("");
        jLabel18.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 70, 80, 50));

        JlblEstadoMesa.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        JlblEstadoMesa.setForeground(new java.awt.Color(219, 198, 83));
        JlblEstadoMesa.setText("No se ha seleccionado aun");
        JlblEstadoMesa.setToolTipText("");
        JlblEstadoMesa.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.add(JlblEstadoMesa, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 80, 150, 40));

        btnProductos.setBackground(new java.awt.Color(102, 0, 0));
        btnProductos.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        btnProductos.setForeground(new java.awt.Color(255, 204, 153));
        btnProductos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fast-food_737967.png"))); // NOI18N
        btnProductos.setText("Productos");
        btnProductos.setToolTipText("");
        btnProductos.setBorderPainted(false);
        btnProductos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnProductos.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnProductos.setIconTextGap(12);
        btnProductos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductosActionPerformed(evt);
            }
        });
        jPanel1.add(btnProductos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 240, -1));

        jButton3.setBackground(new java.awt.Color(102, 0, 0));
        jButton3.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 204, 153));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/atencion-al-cliente.png"))); // NOI18N
        jButton3.setText("Clientes");
        jButton3.setToolTipText("");
        jButton3.setBorderPainted(false);
        jButton3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton3.setIconTextGap(12);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 390, 240, -1));

        btnProductos2.setBackground(new java.awt.Color(102, 0, 0));
        btnProductos2.setFont(new java.awt.Font("Cambria", 1, 24)); // NOI18N
        btnProductos2.setForeground(new java.awt.Color(255, 204, 153));
        btnProductos2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/factura.png"))); // NOI18N
        btnProductos2.setText("Facturacion");
        btnProductos2.setToolTipText("");
        btnProductos2.setBorderPainted(false);
        btnProductos2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnProductos2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnProductos2.setIconTextGap(12);
        btnProductos2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProductos2ActionPerformed(evt);
            }
        });
        jPanel1.add(btnProductos2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, -1, -1));

        escritorio.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1310, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio, javax.swing.GroupLayout.DEFAULT_SIZE, 1308, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(escritorio, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JbAñadirMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbAñadirMesaActionPerformed
       
        mesasList=md.listarMesas();
      mesasAgregadas=mesasList.size();
        
        jDialog1.pack();
        jDialog1.setLocationRelativeTo(this);
        jDialog1.setVisible(true);
        actualizarComboBoxMesas();
    }//GEN-LAST:event_JbAñadirMesaActionPerformed

    private void JbModificarMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbModificarMesaActionPerformed
        if (selectedLabel != null && selectedLabel.getClientProperty("mesa") != null) {
            
        jDialog2.pack();
        jDialog2.setLocationRelativeTo(this);
        jDialog2.setVisible(true);

        Mesa mesa = (Mesa) selectedLabel.getClientProperty("mesa");
        int numeroMesa = mesa.getIdMesa();

        JlblMesaSeleccionada.setText("" + numeroMesa);
    } else {
        JOptionPane.showMessageDialog(null, "No se ha seleccionado ninguna mesa.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_JbModificarMesaActionPerformed

    private void JbAEliminarMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbAEliminarMesaActionPerformed
          
            
        
        if (selectedLabel == null) {
            JOptionPane.showMessageDialog(this, "No hay ninguna mesa seleccionada.");
            return;
        }

        Mesa mesaSeleccionada = (Mesa) selectedLabel.getClientProperty("mesa");

        if (mesaSeleccionada != null) {
            md.borrarMesa(mesaSeleccionada.getIdMesa());
            System.out.println("entro al if y deberia haber eliminado la mesa");
            mesaSeleccionada.setEstado(null);
            URL imageURL = getClass().getResource("/img/Vacio.png");
            ImageIcon icono = new ImageIcon(imageURL);
            selectedLabel.setIcon(icono); 
            selectedLabel.putClientProperty("mesa", null);
            selectedLabel = null;
        } else {
            JOptionPane.showMessageDialog(this, "La mesa seleccionada no tiene datos.");
        }
        mesasList=md.listarMesas();
      mesasAgregadas=mesasList.size();
        
         actualizarComboBoxMesas();
        
    }//GEN-LAST:event_JbAEliminarMesaActionPerformed

    private void btnProductos1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductos1ActionPerformed
        jDialog1.dispose();
    }//GEN-LAST:event_btnProductos1ActionPerformed

    private void JbAceptarMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbAceptarMesaActionPerformed
       
        
        int mesasAAgregar = cantidadMesasComboBox.getSelectedIndex() + 1;
        int capacidad = Integer.parseInt(JtCapacidadMesas.getText());
        int mesasagregadasindice=0;
        
        for (int i = 0; i < mesaLabels.length; i++) {
            JLabel mesaLabel = mesaLabels[i];
                if (mesaLabel.getClientProperty("mesa") !=null) {
                    mesasagregadasindice++;
                }
                System.out.println(mesasagregadasindice);
        }
        mesasagregadasindice = mesasagregadasindice+mesasAAgregar ;
        //test consola
         System.out.println(mesasAAgregar);
         System.out.println(mesasAgregadas);
         System.out.println("hasta donde deberia llegar es hasta "+  mesasagregadasindice);
         
        URL imageURL = getClass().getResource("/img/Libre.png");
        
            
            
        int indice=0;    
            
        for (int i = 0; i < mesaLabels.length && mesasAAgregar > 0; i++) {
            
            System.out.println("entro al for");
            JLabel mesaLabel = mesaLabels[i];
            ImageIcon icono = new ImageIcon(imageURL);
            
            
                
            
            if (mesaLabel.getClientProperty("mesa") == null && indice <mesasagregadasindice) {
                try{
                    System.out.println("entrando al try");
                Mesa nuevaMesa = new Mesa(i + 1, capacidad, "libre");
                md.crearMesa(nuevaMesa);
                mesaLabel.setIcon(icono);
                mesaLabel.putClientProperty("mesa", nuevaMesa);
                mesaLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));
                }catch(Exception e){
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(this, "Error al agregar la mesa");
                }
                    
            mesaLabel.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseEntered(MouseEvent e) {
                    // Cambiar el cursor cuando se pasa sobre el JLabel
                    mesaLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));
                }

                @Override
                public void mouseClicked(MouseEvent e) {
                    if (selectedLabel != null) {
                        selectedLabel.setBorder(null);
                    }

                    mesaLabel.setBorder(BorderFactory.createLineBorder(Color.GREEN, 2));

                    selectedLabel = mesaLabel;
                    modificarLabelMesaSeleccionada();
                }

            });
                
            }
            
            indice++;
        }
           
        System.out.println("salio del for");
        mesasList=md.listarMesas();
      mesasAgregadas=mesasList.size();
        
        actualizarComboBoxMesas();
        jDialog1.dispose();
    }//GEN-LAST:event_JbAceptarMesaActionPerformed

    private void cantidadMesasComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cantidadMesasComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cantidadMesasComboBoxActionPerformed

    private void JCEstadoDeMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JCEstadoDeMesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JCEstadoDeMesaActionPerformed

    private void JbAceptarModificarMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbAceptarModificarMesaActionPerformed
        // Obtener el estado seleccionado del JComboBox
        String estadoSeleccionado = (String) JCEstadoDeMesa.getSelectedItem(); // JCEstadoDeMesa es tu JComboBox

        // Obtener la nueva capacidad de la mesa desde el JTextField
        String capacidadTexto = JtModificarCapMesas.getText(); // JtModificarCapMesas es tu JTextField para capacidad
   
        // Verificar que la capacidad sea un número válido
        int nuevaCapacidad = 0;
        try {
            nuevaCapacidad = Integer.parseInt(capacidadTexto);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Por favor, ingresa una capacidad válida.");
            return;
        }

        actualizarImagenMesa(selectedLabel, estadoSeleccionado);

        Mesa mesaSeleccionada = (Mesa) selectedLabel.getClientProperty("mesa");
        if (mesaSeleccionada != null) {
            mesaSeleccionada.setCapacidad(nuevaCapacidad);
            mesaSeleccionada.setEstado(estadoSeleccionado); 
            md.modificarMesa(mesaSeleccionada);
        }
        
      
        jDialog2.dispose();

        JOptionPane.showMessageDialog(this, "La mesa se modificó con éxito.");
    }//GEN-LAST:event_JbAceptarModificarMesaActionPerformed

    private void JbCancelarModificarMesaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JbCancelarModificarMesaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JbCancelarModificarMesaActionPerformed

    private void JtModificarCapMesasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtModificarCapMesasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JtModificarCapMesasActionPerformed

    private void btnProductosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductosActionPerformed

        ViewProducto vp = new ViewProducto();  
        vp.setSize(1000, 650);       
        escritorio.setLayout(null);
        escritorio.add(vp);  
        vp.setVisible(true);  
        vp.moveToFront();     

    }//GEN-LAST:event_btnProductosActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
          
    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnProductos2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProductos2ActionPerformed
        
    }//GEN-LAST:event_btnProductos2ActionPerformed

    private void modificarLabelMesaSeleccionada(){
        Mesa mesaSeleccionada = (Mesa) selectedLabel.getClientProperty("mesa");

        if (mesaSeleccionada != null) {
            int numeroMesa = mesaSeleccionada.getIdMesa();
            int capacidad = mesaSeleccionada.getCapacidad(); 
            String estado = mesaSeleccionada.getEstado();    

            
            JlblNumMesa.setText("Número de Mesa: " + numeroMesa);
            JlblCapMesa.setText("Capacidad: " + capacidad);        
            JlblEstadoMesa.setText("Estado: " + estado);
            }else {
                JlblNumMesa.setText("No se ha seleccionado aun");
                JlblCapMesa.setText("No se ha seleccionado aun");        
                JlblEstadoMesa.setText("No se ha seleccionado aun");
            }
        }
    private void inicializarMesas() {
       mesaLabels[0] = JlblMesa1;
       mesaLabels[1] = JlblMesa2;
       mesaLabels[2] = JlblMesa3;
       mesaLabels[3] = JlblMesa4;
       mesaLabels[4] = JlblMesa5;
       mesaLabels[5] = JlblMesa6;
       mesaLabels[6] = JlblMesa7;
       mesaLabels[7] = JlblMesa8;
       mesaLabels[8] = JlblMesa9;
       mesaLabels[9] = JlblMesa10;
       mesaLabels[10] = JlblMesa11;
       mesaLabels[11] = JlblMesa12;
    }
    
    private void traerMesasDB(){
            int i=0;
        for (Mesa m:mesasList) {
            URL imageURL= getClass().getResource("/img/"+m.getEstado().toLowerCase()+".png");
          ImageIcon icono = new ImageIcon(imageURL);
             JLabel mesaLabel = mesaLabels[i];
                mesaLabel.setIcon(icono);
                mesaLabel.putClientProperty("mesa", m);
                mesaLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));
                i++;
                
                    mesaLabel.addMouseListener(new MouseAdapter() {
                @Override
                public void mouseEntered(MouseEvent e) {
                    // Cambiar el cursor cuando se pasa sobre el JLabel
                    mesaLabel.setCursor(new Cursor(Cursor.HAND_CURSOR));
                }

                @Override
                public void mouseClicked(MouseEvent e) {
                    if (selectedLabel != null) {
                        selectedLabel.setBorder(null);
                    }

                    mesaLabel.setBorder(BorderFactory.createLineBorder(Color.GREEN, 2));

                    selectedLabel = mesaLabel;
                    modificarLabelMesaSeleccionada();
                }

            });
                
        }
       
    
    
    }
    
    //da el numero de mesas que aun se pueden agregar
    private void actualizarComboBoxMesas() {
        
        int maxMesas = 12;

        cantidadMesasComboBox.removeAllItems();

        for (int i = 1; i <= maxMesas - mesasAgregadas; i++) {
            cantidadMesasComboBox.addItem(i + " Mesas");
        }
    }

//    private int contarMesas() {
//        int contador = 0;
//        for (JLabel mesaLabel : mesaLabels) {
//            if (mesaLabel.getClientProperty("mesa") != null) {
//                contador++;
//            }
//        }
//        return contador;
//    }
    
    private void actualizarImagenMesa(JLabel mesaLabel, String estado) {
        URL imageURL;
        ImageIcon icono;

        switch (estado.toLowerCase()) {
            case "libre":
                imageURL = getClass().getResource("/img/libre.png");
                break;
            case "ocupada":
                imageURL = getClass().getResource("/img/ocupada.png");
                break;
            case "atendida":
                imageURL = getClass().getResource("/img/atendida.png");
                break;
            case "reservada":
                imageURL = getClass().getResource("/img/reservada.png");
                break;
            default:
                System.out.println("Estado no reconocido: " + estado);
                return;
        }

        if (imageURL == null) {
            System.out.println("Error: La imagen para el estado " + estado + " no se encontró.");
            return;
        }

        icono = new ImageIcon(imageURL);
        mesaLabel.setIcon(icono);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JCEstadoDeMesa;
    private javax.swing.JButton JbAEliminarMesa;
    private javax.swing.JButton JbAceptarMesa;
    private javax.swing.JButton JbAceptarModificarMesa;
    private javax.swing.JButton JbAñadirMesa;
    private javax.swing.JButton JbCancelarModificarMesa;
    private javax.swing.JButton JbModificarMesa;
    private javax.swing.JLabel JlblCapMesa;
    private javax.swing.JLabel JlblEstadoMesa;
    private javax.swing.JLabel JlblMesa1;
    private javax.swing.JLabel JlblMesa10;
    private javax.swing.JLabel JlblMesa11;
    private javax.swing.JLabel JlblMesa12;
    private javax.swing.JLabel JlblMesa2;
    private javax.swing.JLabel JlblMesa3;
    private javax.swing.JLabel JlblMesa4;
    private javax.swing.JLabel JlblMesa5;
    private javax.swing.JLabel JlblMesa6;
    private javax.swing.JLabel JlblMesa7;
    private javax.swing.JLabel JlblMesa8;
    private javax.swing.JLabel JlblMesa9;
    private javax.swing.JLabel JlblMesaSeleccionada;
    private javax.swing.JLabel JlblNumMesa;
    private javax.swing.JTextField JtCapacidadMesas;
    private javax.swing.JTextField JtModificarCapMesas;
    private javax.swing.JButton btnProductos;
    private javax.swing.JButton btnProductos1;
    private javax.swing.JButton btnProductos2;
    private javax.swing.JComboBox<String> cantidadMesasComboBox;
    private javax.swing.JDesktopPane escritorio;
    private javax.swing.JButton jButton3;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package Persistencia;

import Entidades.Conexion;
import Entidades.Mesero;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class MeseroData {
    private Connection con;

    public MeseroData() {
        con = Conexion.getConexion();
    }

    public void crearMesero(Mesero mesero) {
        String sql = "INSERT INTO meseros (id, nombre, dni) VALUES (?, ?, ?)";
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, mesero.getId());
            ps.setString(2, mesero.getNombre());
            ps.setString(3, mesero.getDni());
            ps.executeUpdate();
            System.out.println("Mesero creado con éxito.");
        } catch (SQLException ex) {
            System.out.println("Error al crear mesero: " + ex.getMessage());
        }
    }

    public void eliminarMesero(int meseroId) {
        String sql = "DELETE FROM meseros WHERE id = ?";
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, meseroId);
            ps.executeUpdate();
            System.out.println("Mesero eliminado con éxito.");
        } catch (SQLException ex) {
            System.out.println("Error al eliminar mesero: " + ex.getMessage());
        }
    }

    public void modificarMesero(Mesero mesero) {
        String sql = "UPDATE meseros SET nombre = ?, dni = ? WHERE id = ?";
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, mesero.getNombre());
            ps.setString(2, mesero.getDni());
            ps.setInt(3, mesero.getId());
            ps.executeUpdate();
            System.out.println("Mesero modificado con éxito.");
        } catch (SQLException ex) {
            System.out.println("Error al modificar mesero: " + ex.getMessage());
        }
    }

    public Mesero buscarMeseroPorDNI(String dni) {
        String sql = "SELECT * FROM meseros WHERE dni = ?";
        Mesero mesero = null;
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, dni);
            ResultSet rs = ps.executeQuery();
            if (rs.next()) {
                mesero = new Mesero(rs.getInt("id"), rs.getString("nombre"), rs.getString("dni"));
            }
        } catch (SQLException ex) {
            System.out.println("Error al buscar mesero: " + ex.getMessage());
        }
        return mesero;
    }
}
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package Persistencia;

import Entidades.Conexion;
import Entidades.Mesa;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

public class MesaData {
    private Connection con;

    public MesaData() {
        con = Conexion.getConexion();
    }

    public List <Mesa> listarMesas(){
        List<Mesa> mesas = new ArrayList<>();
        String sql = "SELECT * FROM mesa";
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Mesa mesa = new Mesa(rs.getInt("id_mesa"), rs.getInt("capacidad"), rs.getString("estado"));
                mesas.add(mesa);
            }
            rs.close();
        } catch (SQLException e) {
            System.out.println("Error al listar mesas: " + e.getMessage());
        }
        return mesas;
    }
    public void crearMesa(Mesa mesa) {
        String sql = "INSERT INTO mesa (capacidad, estado) VALUES (?, ?)";
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, mesa.getCapacidad());
            ps.setString(2, mesa.getEstado());
            ps.executeUpdate();
            System.out.println("Mesa creada con éxito.");
        } catch (SQLException ex) {
            System.out.println("Error al crear mesa: " + ex.getMessage());
        }
    }

    public void modificarMesa(Mesa mesa) {
        String sql = "UPDATE mesa SET capacidad = ?, estado = ? WHERE id_mesa = ?";
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, mesa.getCapacidad());
            ps.setString(2, mesa.getEstado());
            ps.setInt(3, mesa.getIdMesa());
            ps.executeUpdate();
            System.out.println("Mesa modificada con éxito.");
        } catch (SQLException ex) {
            System.out.println("Error al modificar mesa: " + ex.getMessage());
        }
    }

    public List<Mesa> listarMesasPorEstado(String estado) {
        String sql = "SELECT * FROM mesa WHERE estado = ?";
        List<Mesa> mesas = new ArrayList<>();
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, estado);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                Mesa mesa = new Mesa(rs.getInt("id_mesa"), rs.getInt("capacidad"), rs.getString("estado"));
                mesas.add(mesa);
            }
        } catch (SQLException ex) {
            System.out.println("Error al listar mesas: " + ex.getMessage());
        }
        return mesas;
    }

    public void cambiarEstadoMesa(int mesaId, String nuevoEstado) {
        String sql = "UPDATE mesa SET estado = ? WHERE id_mesa = ?";
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, nuevoEstado);
            ps.setInt(2, mesaId);
            ps.executeUpdate();
            System.out.println("Estado de la mesa actualizado a: " + nuevoEstado);
        } catch (SQLException ex) {
            System.out.println("Error al cambiar el estado de la mesa: " + ex.getMessage());
        }
    }
    
    public void borrarMesa(int idMesa) {
        String sql = "DELETE FROM mesa WHERE id_mesa = ?";
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, idMesa);
            ps.executeUpdate();
            System.out.println("Mesa eliminada con éxito.");
        } catch (SQLException ex) {
            System.out.println("Error al eliminar mesa: " + ex.getMessage());
        }
    }
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package Persistencia;

import Entidades.Conexion;
import Entidades.Pedido;
import Entidades.Producto;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.sql.Statement;

public class PedidoData {
    private Connection con;

    public PedidoData() {
        con = Conexion.getConexion();
    }

    public int crearPedido(int mesaId, int meseroId, String fecha, String hora, double monto) {
        String queryVerificarMesa = "SELECT id FROM mesas WHERE id = ?";
        String queryVerificarMesero = "SELECT id FROM meseros WHERE id = ?";
        String queryCrearPedido = "INSERT INTO pedidos (mesa_id, mesero_id, fecha, hora, monto, pagado) VALUES (?, ?, ?, ?, ?, ?)";
        int pedidoId = -1;

        try (PreparedStatement psVerificarMesa = con.prepareStatement(queryVerificarMesa)) {
            psVerificarMesa.setInt(1, mesaId);
            ResultSet rsMesa = psVerificarMesa.executeQuery();

            if (rsMesa.next()) {
                try (PreparedStatement psVerificarMesero = con.prepareStatement(queryVerificarMesero)) {
                    psVerificarMesero.setInt(1, meseroId);
                    ResultSet rsMesero = psVerificarMesero.executeQuery();

                    if (rsMesero.next()) {
                        try (PreparedStatement psInsertar = con.prepareStatement(queryCrearPedido, Statement.RETURN_GENERATED_KEYS)) {
                            psInsertar.setInt(1, mesaId);
                            psInsertar.setInt(2, meseroId);
                            psInsertar.setString(3, fecha);
                            psInsertar.setString(4, hora);
                            psInsertar.setDouble(5, monto);
                            psInsertar.setBoolean(6, false);
                            psInsertar.executeUpdate();

                            ResultSet rs = psInsertar.getGeneratedKeys();
                            if (rs.next()) {
                                pedidoId = rs.getInt(1);
                            }
                        }
                    } else {
                        System.out.println("El mesero con id " + meseroId + " no existe.");
                    }
                }
            } else {
                System.out.println("La mesa con id " + mesaId + " no existe.");
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return pedidoId;
    }

    public double calcularMontoTotal(int pedidoId) {
        double total = 0.0;
        String sql = "SELECT p.precio, pp.cantidad FROM productos p INNER JOIN pedidos_productos pp ON p.id = pp.producto_id WHERE pp.pedido_id = ?";
        try {
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, pedidoId);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                total += rs.getDouble("precio") * rs.getInt("cantidad");
            }
        } catch (SQLException ex) {
            System.out.println("Error al calcular el monto total: " + ex.getMessage());
        }
        return total;
    }
}
    

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package Entidades;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Esquina del Vidrio
 */
public class Conexion {
    private static final String URL = "jdbc:mariadb://localhost:3306/restaurant_g6";
    private static final String USUARIO = "root";
    private static final String PASSWORD = "";
    private static Connection conexion = null;

    private Conexion() {}

    public static Connection getConexion() {
        if (conexion == null) {
            try {
                Class.forName("org.mariadb.jdbc.Driver");
                conexion = DriverManager.getConnection(URL, USUARIO, PASSWORD);
                System.out.println("Conexión exitosa.");
            } catch (SQLException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Error al conectar con la base de datos");
                Logger.getLogger(Conexion.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return conexion;
    }
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package Entidades;

/**
 *
 * @author Esquina del Vidrio
 */
public class Mesero {
    private int id;
    private String nombre;
    private String dni;

    public Mesero(int id, String nombre, String dni) {
        this.id = id;
        this.nombre = nombre;
        this.dni = dni;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getDni() {
        return dni;
    }

    public void setDni(String dni) {
        this.dni = dni;
    }
}
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package Entidades;

import java.util.List;

/**
 *
 * @author Esquina del Vidrio
 */
public class Pedido {
    private int id;
    private Cliente cliente;
    private Mesero mesero;
    private Mesa mesa;
    private List<Producto> productos;
    private double monto;
    private boolean pagado;

    public Pedido(int id, Cliente cliente, Mesero mesero, Mesa mesa, List<Producto> productos, double monto) {
        this.id = id;
        this.cliente = cliente;
        this.mesero = mesero;
        this.mesa = mesa;
        this.productos = productos;
        this.monto = monto;
        this.pagado = false;
    }

    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public Cliente getCliente() {
        return cliente;
    }

    public void setCliente(Cliente cliente) {
        this.cliente = cliente;
    }
   
    public Mesero getMesero() {
        return mesero;
    }

    public void setMesero(Mesero mesero) {
        this.mesero = mesero;
    }

    public Mesa getMesa() {
        return mesa;
    }

    public void setMesa(Mesa mesa) {
        this.mesa = mesa;
    }

    public List<Producto> getProductos() {
        return productos;
    }

    public void setProductos(List<Producto> productos) {
        this.productos = productos;
    }

    public double getMonto() {
        return monto;
    }

    public void setMonto(double monto) {
        this.monto = monto;
    }

    public boolean isPagado() {
        return pagado;
    }

    public void setPagado(boolean pagado) {
        this.pagado = pagado;
    }
}

